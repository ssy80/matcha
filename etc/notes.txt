
apt install node
apt install npm
npm install express
npm install swagger-jsdoc swagger-ui-express
npm install sqlite3
npm install sqlite
npm install nodemailer
npm install bcrypt
npm install dotenv
npm install uuid
npm install jsonwebtoken
npm install axios

cd ./matcha

# init a node project -y = accept default for package.json
npm init -y

# add node_modules/ to .gitignore

# get node_modules according to package.json
npm install


Setup to use
1) Backend REST API server - Express/node
2) Database - sqlite during development(Simpler), later use postgresSql(final)




Todo

User module 
1) Registration 
    - email address, username, last name, first name, password
    - must receive an email with a unique link to verify their account


2) Sign In
    - log in using their username and password
    - request a password reset email if they forget their password
    - log out with a single click (Frontend delete the token)

3) User Profile
    - Complete profile - gender, sexual preferences, biography, list of interests, 5 pictures(1 for profile)
        gender: "male", "female", "others"
        sexual_preferences: "male", "female", "others"
        interests: "#music", "#movie", "#fine_dining", "#travel", "#sport", "#vegan"
    - allow update all profiles above + last name, first name, and email address

    //add date of birth
    add who view me list
    get who view me by id
    get who liked me list
    get who liked me by id
    //add user_onlines table
    get user online status
    
    add user_blocks table


    - Users must be able to see who has viewed their profile.  -- view history
    - Users must also be able to see who has “liked” them.     --like history
    - Each user must have a public “fame rating”               -- most liked count ?
    
    - Users must be located via GPS positioning down to their neighborhood.
    - If a user opts out of location tracking, you must implement an alternative method to      -- ip geolocation??
      determine their approximate location, even without their explicit consent.
    - Users must also have the option to manually adjust their GPS location in their profile.   --?? manually adjust the co ordinates or 



Database

1) Setup Sqlite3
    sudo apt install sqlite3 -y

    npm install express sqlite3

    sqlite ./database/matcha.db 
    .read "../scripts/db.sql"


API Standard Responses:

    {
        "message": [],                  # success, final
        "error": []
    }



Registration:
1) register user
2) activate user
3) login
4) send reset password email
5) reset_password /api/user/reset_password
6) get profile /api/profile/me
7) update profile /api/profile/update (patch)
8) update picture as profile pic /api/profile/profile_picture_update

get profile other /api/profile/{id}




await db.run( INSERT INTO user_locations (user_id, latitude, longitude, updated_at) 
VALUES (?, ?, ?, CURRENT_TIMESTAMP) 
ON CONFLICT(user_id) 
DO UPDATE SET latitude = excluded.latitude, longitude = excluded.longitude, 
updated_at = CURRENT_TIMESTAMP; , [userId, latitude, longitude]);